Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/client.py", line 1085, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/client.py", line 552, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/client.py", line 846, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/nbclient/client.py", line 748, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt

def plot_example_decision_tree():
    fig = plt.figure(figsize=(10, 4))
    ax = fig.add_axes([0, 0, 0.8, 1], frameon=False, xticks=[], yticks=[])
    ax.set_title('Example Decision Tree: Animal Classification', size=24)
    # Disable color cycling for lines
    ax.set_prop_cycle(color=[plt.rcParams['lines.color']])

    def text(ax, x, y, t, size=20, **kwargs):
        ax.text(
            x, y, t, ha='center', va='center', size=size, 
            bbox=dict(boxstyle='round', ec=plt.rcParams['text.color'], fc=plt.rcParams['figure.facecolor']), 
            **kwargs
        )

    text(ax, 0.5, 0.9, "How big is\nthe animal?", 20)
    text(ax, 0.3, 0.6, "Does the animal\nhave horns?", 18)
    text(ax, 0.7, 0.6, "Does the animal\nhave two legs?", 18)
    text(ax, 0.12, 0.3, "Are the horns\nlonger than 10cm?", 14)
    text(ax, 0.38, 0.3, "Is the animal\nwearing a collar?", 14)
    text(ax, 0.62, 0.3, "Does the animal\nhave wings?", 14)
    text(ax, 0.88, 0.3, "Does the animal\nhave a tail?", 14)
    text(ax, 0.4, 0.75, "> 1m", 12, alpha=0.4)
    text(ax, 0.6, 0.75, "< 1m", 12, alpha=0.4)
    text(ax, 0.21, 0.45, "yes", 12, alpha=0.4)
    text(ax, 0.34, 0.45, "no", 12, alpha=0.4)
    text(ax, 0.66, 0.45, "yes", 12, alpha=0.4)
    text(ax, 0.79, 0.45, "no", 12, alpha=0.4)
    ax.plot([0.3, 0.5, 0.7], [0.6, 0.9, 0.6], '-')
    ax.plot([0.12, 0.3, 0.38], [0.3, 0.6, 0.3], '-')
    ax.plot([0.62, 0.7, 0.88], [0.3, 0.6, 0.3], '-')
    ax.plot([0.0, 0.12, 0.20], [0.0, 0.3, 0.0], '--')
    ax.plot([0.28, 0.38, 0.48], [0.0, 0.3, 0.0], '--')
    ax.plot([0.52, 0.62, 0.72], [0.0, 0.3, 0.0], '--')
    ax.plot([0.8, 0.88, 1.0], [0.0, 0.3, 0.0], '--')
    ax.axis([0, 1, 0, 1])
    
plot_example_decision_tree()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_1712/2298513404.py[0m in [0;36m<module>[0;34m[0m
[1;32m     37[0m     [0max[0m[0;34m.[0m[0maxis[0m[0;34m([0m[0;34m[[0m[0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m,[0m [0;36m0[0m[0;34m,[0m [0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     38[0m [0;34m[0m[0m
[0;32m---> 39[0;31m [0mplot_example_decision_tree[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/tmp/ipykernel_1712/2298513404.py[0m in [0;36mplot_example_decision_tree[0;34m()[0m
[1;32m      6[0m     [0max[0m[0;34m.[0m[0mset_title[0m[0;34m([0m[0;34m'Example Decision Tree: Animal Classification'[0m[0;34m,[0m [0msize[0m[0;34m=[0m[0;36m24[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      7[0m     [0;31m# Disable color cycling for lines[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 8[0;31m     [0max[0m[0;34m.[0m[0mset_prop_cycle[0m[0;34m([0m[0mcolor[0m[0;34m=[0m[0;34m[[0m[0mplt[0m[0;34m.[0m[0mrcParams[0m[0;34m[[0m[0;34m'lines.color'[0m[0;34m][0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      9[0m [0;34m[0m[0m
[1;32m     10[0m     [0;32mdef[0m [0mtext[0m[0;34m([0m[0max[0m[0;34m,[0m [0mx[0m[0;34m,[0m [0my[0m[0;34m,[0m [0mt[0m[0;34m,[0m [0msize[0m[0;34m=[0m[0;36m20[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/matplotlib/axes/_base.py[0m in [0;36mset_prop_cycle[0;34m(self, *args, **kwargs)[0m
[1;32m   1573[0m             [0mprop_cycle[0m [0;34m=[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1574[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1575[0;31m             [0mprop_cycle[0m [0;34m=[0m [0mcycler[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1576[0m         [0mself[0m[0;34m.[0m[0m_get_lines[0m[0;34m.[0m[0mset_prop_cycle[0m[0;34m([0m[0mprop_cycle[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1577[0m         [0mself[0m[0;34m.[0m[0m_get_patches_for_fill[0m[0;34m.[0m[0mset_prop_cycle[0m[0;34m([0m[0mprop_cycle[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/matplotlib/rcsetup.py[0m in [0;36mcycler[0;34m(*args, **kwargs)[0m
[1;32m    693[0m         [0;32mif[0m [0mvalidator[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    694[0m             [0;32mraise[0m [0mTypeError[0m[0;34m([0m[0;34m"Unknown artist property: %s"[0m [0;34m%[0m [0mprop[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 695[0;31m         [0mvals[0m [0;34m=[0m [0mvalidator[0m[0;34m([0m[0mvals[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    696[0m         [0;31m# We will normalize the property names as well to reduce[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    697[0m         [0;31m# the amount of alias handling code elsewhere.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/matplotlib/rcsetup.py[0m in [0;36mf[0;34m(s)[0m
[1;32m    105[0m             [0;31m# from the original validate_stringlist()), while allowing[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    106[0m             [0;31m# any non-string/text scalar values such as numbers and arrays.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 107[0;31m             val = [scalar_validator(v) for v in s
[0m[1;32m    108[0m                    if not isinstance(v, str) or v]
[1;32m    109[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/matplotlib/rcsetup.py[0m in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m    106[0m             [0;31m# any non-string/text scalar values such as numbers and arrays.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    107[0m             val = [scalar_validator(v) for v in s
[0;32m--> 108[0;31m                    if not isinstance(v, str) or v]
[0m[1;32m    109[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    110[0m             raise ValueError(

[0;32m/opt/hostedtoolcache/Python/3.7.12/x64/lib/python3.7/site-packages/matplotlib/rcsetup.py[0m in [0;36mvalidate_color_for_prop_cycle[0;34m(s)[0m
[1;32m    283[0m     [0;31m# N-th color cycle syntax can't go into the color cycle.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    284[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0ms[0m[0;34m,[0m [0mstr[0m[0;34m)[0m [0;32mand[0m [0mre[0m[0;34m.[0m[0mmatch[0m[0;34m([0m[0;34m"^C[0-9]$"[0m[0;34m,[0m [0ms[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 285[0;31m         [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34mf"Cannot put cycle reference ({s!r}) in prop_cycler"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    286[0m     [0;32mreturn[0m [0mvalidate_color[0m[0;34m([0m[0ms[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    287[0m [0;34m[0m[0m

[0;31mValueError[0m: Cannot put cycle reference ('C0') in prop_cycler
ValueError: Cannot put cycle reference ('C0') in prop_cycler

